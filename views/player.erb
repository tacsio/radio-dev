
<h2 id='music-title'></h2>
<div class='row' id='player'>

  <script>
      // 2. This code loads the IFrame Player API code asynchronously.
    var tag = document.createElement('script');

    tag.src = "https://www.youtube.com/iframe_api";
    var firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

    // 3. This function creates an <iframe> (and YouTube player)
    //    after the API code downloads.
    var player;
    function onYouTubeIframeAPIReady() {
      player = new YT.Player('player', {
        height: '390',
        width: '640',
        playerVars: { 'autoplay': 1, 'controls': 0, 'disablekb': 1 },
        videoId: '<%= @current %>',
        events: {
          'onReady': onPlayerReady,
          'onStateChange': onPlayerStateChange,
          'onError': onPlayerError
        }
      });
    }

    // 4. The API will call this function when the video player is ready.
    function onPlayerReady(event) {
      updateVideoName('<%= @current %>');
      event.target.playVideo();
    }

    // 5. The API calls this function when the player's state changes.
    //    The function indicates that when playing a video (state=1),
    //    the player should play for six seconds and then stop.
    function onPlayerStateChange(event) {
      if (event.data == YT.PlayerState.ENDED) {
        nextVideo();
        //TODO: remove playlist via websocket
      } else if(event.data == YT.PlayerState.PAUSED) {
        player.playVideo();
      }

    }
    function stopVideo() {
      player.stopVideo();
    }

    function onPlayerError(event){
      nextVideo();
    }

    function nextVideo(){
      $.ajax({
          url: "/next",
          dataType: "html",
          success: function(data) {
            updateVideoName(data);
            player.loadVideoById(data, 0, 'default');
          }
        });
    }

    function updateVideoName(video_id) {
      video_name(video_id, function(name){
        $('#music-title').html(name);
      });
    }
  </script>
</div>
